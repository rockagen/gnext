<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-3.2.xsd
         http://www.springframework.org/schema/aop 
         http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
         http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
         http://www.springframework.org/schema/util
         http://www.springframework.org/schema/util/spring-util-3.2.xsd
         http://www.springframework.org/schema/task
         http://www.springframework.org/schema/task/spring-task-3.2.xsd">




	<!-- open annotation -->
	<context:annotation-config></context:annotation-config>

	<!-- auto scan -->
	<context:component-scan base-package="com.rockagen.gnext">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- KEY VALUE MAP -->
	<bean id="keyValueMap" class="com.rockagen.gnext.service.spring.KeyValueMapImpl"
		init-method="init">
		<property name="keyValueServ" ref="keyValueServ" />
	</bean>

	<!-- KEY VALUE MAP TASK -->
	<task:scheduled-tasks>
		<task:scheduled ref="keyValueMap" method="update"
			cron="0 */20 9-21 * * ?" />
	</task:scheduled-tasks>

	<aop:aspectj-autoproxy proxy-target-class="true" />


	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="packagesToScan" value="com.rockagen.gnext.po" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL82Dialect</prop>

				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>

				<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>
				<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>  
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.jdbc.batch_size">100</prop>
				<prop key="hibernate.jdbc.fetch_size">50</prop>
				<prop key="hibernate.max_fetch_depth">3</prop>
				<prop key="hibernate.default_batch_fetch_size">16</prop>

				<prop key="hibernate.hbm2ddl.auto">update</prop>

			</props>
		</property>
		<property name="dataSource" ref="myDataSource" />
	</bean>


	<bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!--<tx:annotation-driven transaction-manager="txManager" /> -->

	<aop:config>
		<aop:pointcut id="fooServiceMethods"
			expression="execution(public 
		* com.rockagen.gnext.service.spring.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="fooServiceMethods" />
	</aop:config>
	
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="load*" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>

	<!-- Data source -->
	<!--see https://github.com/alibaba/druid -->
	<bean id="myDataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="jdbc:postgresql://localhost:5432/gnextdb" />
		<property name="username" value="gnext" />
		<property name="password" value="" />
		<property name="filters" value="mergeStat" />

		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="20" />
		<property name="maxWait" value="60000" />
		<!-- 
		CREATE TABLE druid (id integer);
		INSERT INTO druid values (1);
		 -->
		<property name="validationQuery" value="select id from druid" />
		<property name="testOnBorrow" value="false" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
	</bean>

	<!-- include Spring security3.x config file -->
	<import resource="classpath:applicationContext-security.xml" />
	<!-- include Spring mvc config file -->
	<import resource="classpath:spring-mvc.xml" />
</beans>
